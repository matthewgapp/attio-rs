/*
 * Attio API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@attio.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkspaceMember {
    #[serde(rename = "id")]
    pub id: Box<crate::models::WorkspaceMemberId>,
    /// The first name of the user.
    #[serde(rename = "first_name", deserialize_with = "Option::deserialize")]
    pub first_name: Option<serde_json::Value>,
    /// The last name of the user.
    #[serde(rename = "last_name", deserialize_with = "Option::deserialize")]
    pub last_name: Option<serde_json::Value>,
    /// A URL to the user's avatar image.
    #[serde(rename = "avatar_url", deserialize_with = "Option::deserialize")]
    pub avatar_url: Option<serde_json::Value>,
    /// The user's email address.
    #[serde(rename = "email_address", deserialize_with = "Option::deserialize")]
    pub email_address: Option<serde_json::Value>,
    /// When the workspace member was created.
    #[serde(rename = "created_at", deserialize_with = "Option::deserialize")]
    pub created_at: Option<serde_json::Value>,
    /// Whether the workspace member is suspended or not and what level of privileges they have inside the workspace. We do not delete workspace members so that you can successfully attribute past actions to suspended workspace members.
    #[serde(rename = "access_level", deserialize_with = "Option::deserialize")]
    pub access_level: Option<AccessLevel>,
}

impl WorkspaceMember {
    pub fn new(id: crate::models::WorkspaceMemberId, first_name: Option<serde_json::Value>, last_name: Option<serde_json::Value>, avatar_url: Option<serde_json::Value>, email_address: Option<serde_json::Value>, created_at: Option<serde_json::Value>, access_level: Option<AccessLevel>) -> WorkspaceMember {
        WorkspaceMember {
            id: Box::new(id),
            first_name,
            last_name,
            avatar_url,
            email_address,
            created_at,
            access_level,
        }
    }
}

/// Whether the workspace member is suspended or not and what level of privileges they have inside the workspace. We do not delete workspace members so that you can successfully attribute past actions to suspended workspace members.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AccessLevel {
    #[serde(rename = "admin")]
    Admin,
    #[serde(rename = "member")]
    Member,
    #[serde(rename = "suspended")]
    Suspended,
}

impl Default for AccessLevel {
    fn default() -> AccessLevel {
        Self::Admin
    }
}

