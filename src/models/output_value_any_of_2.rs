/*
 * Attio API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@attio.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct OutputValueAnyOf2 {
    /// A numerical representation of the currency value. A decimal with a max of 4 decimal places.
    #[serde(rename = "currency_value", deserialize_with = "Option::deserialize")]
    pub currency_value: Option<serde_json::Value>,
    /// The ISO4217 currency code representing the currency that the value is stored in.
    #[serde(rename = "currency_code", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub currency_code: Option<Option<CurrencyCode>>,
    /// The attribute type of the value.
    #[serde(rename = "attribute_type", deserialize_with = "Option::deserialize")]
    pub attribute_type: Option<AttributeType>,
}

impl OutputValueAnyOf2 {
    pub fn new(currency_value: Option<serde_json::Value>, attribute_type: Option<AttributeType>) -> OutputValueAnyOf2 {
        OutputValueAnyOf2 {
            currency_value,
            currency_code: None,
            attribute_type,
        }
    }
}

/// The ISO4217 currency code representing the currency that the value is stored in.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CurrencyCode {
    #[serde(rename = "EUR")]
    Eur,
    #[serde(rename = "GBP")]
    Gbp,
    #[serde(rename = "USD")]
    Usd,
    #[serde(rename = "CAD")]
    Cad,
    #[serde(rename = "AUD")]
    Aud,
    #[serde(rename = "AED")]
    Aed,
    #[serde(rename = "INR")]
    Inr,
    #[serde(rename = "CHF")]
    Chf,
    #[serde(rename = "JPY")]
    Jpy,
    #[serde(rename = "CNY")]
    Cny,
}

impl Default for CurrencyCode {
    fn default() -> CurrencyCode {
        Self::Eur
    }
}
/// The attribute type of the value.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AttributeType {
    #[serde(rename = "currency")]
    Currency,
}

impl Default for AttributeType {
    fn default() -> AttributeType {
        Self::Currency
    }
}

