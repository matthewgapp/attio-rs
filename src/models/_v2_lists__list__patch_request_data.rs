/*
 * Attio API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@attio.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V2ListsListPatchRequestData {
    /// The human-readable name of the list.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// A unique, human-readable slug to access the list through API calls. Should be formatted in snake case.
    #[serde(rename = "api_slug", skip_serializing_if = "Option::is_none")]
    pub api_slug: Option<String>,
    /// The level of access granted to all members of the workspace for this list. Pass `null` to keep the list private and only grant access to specific workspace members.
    #[serde(rename = "workspace_access", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub workspace_access: Option<Option<WorkspaceAccess>>,
    #[serde(rename = "workspace_member_access", skip_serializing_if = "Option::is_none")]
    pub workspace_member_access: Option<Vec<crate::models::V2ListsPostRequestDataWorkspaceMemberAccessInner>>,
}

impl V2ListsListPatchRequestData {
    pub fn new() -> V2ListsListPatchRequestData {
        V2ListsListPatchRequestData {
            name: None,
            api_slug: None,
            workspace_access: None,
            workspace_member_access: None,
        }
    }
}

/// The level of access granted to all members of the workspace for this list. Pass `null` to keep the list private and only grant access to specific workspace members.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum WorkspaceAccess {
    #[serde(rename = "full-access")]
    FullAccess,
    #[serde(rename = "read-and-write")]
    ReadAndWrite,
    #[serde(rename = "read-only")]
    ReadOnly,
}

impl Default for WorkspaceAccess {
    fn default() -> WorkspaceAccess {
        Self::FullAccess
    }
}

