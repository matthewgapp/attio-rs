/*
 * Attio API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@attio.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V2ListsPostRequestData {
    /// The human-readable name of the list.
    #[serde(rename = "name")]
    pub name: String,
    /// A unique, human-readable slug to access the list through API calls. Should be formatted in snake case.
    #[serde(rename = "api_slug")]
    pub api_slug: String,
    /// A UUID or slug to identify the allowed object type for records added to this list.
    #[serde(rename = "parent_object")]
    pub parent_object: String,
    /// The level of access granted to all members of the workspace for this list. Pass `null` to keep the list private and only grant access to specific workspace members.
    #[serde(rename = "workspace_access", deserialize_with = "Option::deserialize")]
    pub workspace_access: Option<WorkspaceAccess>,
    #[serde(rename = "workspace_member_access")]
    pub workspace_member_access: Vec<crate::models::V2ListsPostRequestDataWorkspaceMemberAccessInner>,
}

impl V2ListsPostRequestData {
    pub fn new(name: String, api_slug: String, parent_object: String, workspace_access: Option<WorkspaceAccess>, workspace_member_access: Vec<crate::models::V2ListsPostRequestDataWorkspaceMemberAccessInner>) -> V2ListsPostRequestData {
        V2ListsPostRequestData {
            name,
            api_slug,
            parent_object,
            workspace_access,
            workspace_member_access,
        }
    }
}

/// The level of access granted to all members of the workspace for this list. Pass `null` to keep the list private and only grant access to specific workspace members.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum WorkspaceAccess {
    #[serde(rename = "full-access")]
    FullAccess,
    #[serde(rename = "read-and-write")]
    ReadAndWrite,
    #[serde(rename = "read-only")]
    ReadOnly,
}

impl Default for WorkspaceAccess {
    fn default() -> WorkspaceAccess {
        Self::FullAccess
    }
}

